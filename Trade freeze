local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "JaradScriptGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 230)
frame.Position = UDim2.new(0.5, -150, 0.5, -115)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BorderSizePixel = 0
frame.Parent = screenGui
frame.ClipsDescendants = true
frame.AnchorPoint = Vector2.new(0.5, 0.5)

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = frame

-- Draggable functionality
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                               startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Close (X) Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 26, 0, 26)
closeButton.Position = UDim2.new(1, -36, 0, 10)
closeButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
closeButton.Text = "x"
closeButton.TextColor3 = Color3.fromRGB(200, 200, 200)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 18
closeButton.AnchorPoint = Vector2.new(0, 0)
closeButton.Parent = frame

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(1, 0) -- Fully rounded (circle)
closeCorner.Parent = closeButton

closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -60, 0, 26) -- leave space for close button
title.Position = UDim2.new(0, 10, 0, 10)
title.BackgroundTransparency = 1
title.Text = "Jarad Script"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = frame

-- Subtitle
local subtitle = Instance.new("TextLabel")
subtitle.Size = UDim2.new(1, -20, 0, 16)
subtitle.Position = UDim2.new(0, 10, 0, 36)
subtitle.BackgroundTransparency = 1
subtitle.Text = "Trade Freeze | Grow A Garden"
subtitle.TextColor3 = Color3.fromRGB(180, 180, 180)
subtitle.Font = Enum.Font.Gotham
subtitle.TextSize = 11
subtitle.TextXAlignment = Enum.TextXAlignment.Left
subtitle.Parent = frame

-- Status Text
local status = Instance.new("TextLabel")
status.Size = UDim2.new(1, -20, 0, 30) -- increased height to avoid overlap
status.Position = UDim2.new(0, 10, 0, 54)
status.BackgroundTransparency = 1
status.Text = "Trade Status: Added All Pets With Priority"
status.TextColor3 = Color3.fromRGB(220, 220, 220)
status.Font = Enum.Font.Gotham
status.TextSize = 11
status.TextXAlignment = Enum.TextXAlignment.Left
status.TextWrapped = true
status.Parent = frame

-- Toggle Label
local toggleLabel = Instance.new("TextLabel")
toggleLabel.Size = UDim2.new(0.6, 0, 0, 26)
toggleLabel.Position = UDim2.new(0, 10, 0, 85)
toggleLabel.BackgroundTransparency = 1
toggleLabel.Text = "Enable Trade Freeze (OFF)"
toggleLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
toggleLabel.Font = Enum.Font.Gotham
toggleLabel.TextSize = 13
toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
toggleLabel.Parent = frame

-- Toggle Button
local toggle = Instance.new("TextButton")
toggle.Size = UDim2.new(0, 42, 0, 23)
toggle.Position = UDim2.new(0.65, 0, 0, 85)
toggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
toggle.Text = ""
toggle.AutoButtonColor = false
toggle.Parent = frame
toggle.ClipsDescendants = true

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(1, 0)
toggleCorner.Parent = toggle

-- Toggle Circle
local toggleCircle = Instance.new("Frame")
toggleCircle.Size = UDim2.new(0, 19, 0, 19)
toggleCircle.Position = UDim2.new(0, 2, 0, 2)
toggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
toggleCircle.Parent = toggle
local circleCorner = Instance.new("UICorner")
circleCorner.CornerRadius = UDim.new(1, 0)
circleCorner.Parent = toggleCircle

-- Notification function
local function notify(text)
    local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    local notifGui = playerGui:FindFirstChild("NotificationGui")
    if not notifGui then
        notifGui = Instance.new("ScreenGui")
        notifGui.Name = "NotificationGui"
        notifGui.Parent = playerGui
        notifGui.ResetOnSpawn = false
    end

    local notificationFrame = Instance.new("Frame")
    notificationFrame.Size = UDim2.new(0, 260, 0, 30)  -- smaller width and height
    notificationFrame.AnchorPoint = Vector2.new(1, 1)
    notificationFrame.Position = UDim2.new(1, -10, 1, -50)
    notificationFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    notificationFrame.BorderSizePixel = 0
    notificationFrame.ClipsDescendants = true
    notificationFrame.Parent = notifGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = notificationFrame

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -20, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = "✅ " .. text
    label.TextColor3 = Color3.fromRGB(240, 240, 240)
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextWrapped = true
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = notificationFrame

    -- Tween in
    notificationFrame.Position = UDim2.new(1, 310, 1, -50)
    local tweenIn = TweenService:Create(notificationFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {Position = UDim2.new(1, -10, 1, -50)})
    tweenIn:Play()

    -- Tween out and destroy after delay
    delay(2.5, function()
        local tweenOut = TweenService:Create(notificationFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {Position = UDim2.new(1, 310, 1, -50)})
        tweenOut:Play()
        tweenOut.Completed:Wait()
        notificationFrame:Destroy()
    end)
end

-- Toggle Logic
local isOn = false

local function updateToggle()
    if isOn then
        toggle.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        toggleLabel.Text = "Enable Trade Freeze (ON)"
        status.Text = "Trade Status: Trade Freezed — Take out your pets and click Offer Pets!"
        toggleCircle:TweenPosition(UDim2.new(0.52, 0, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
    else
        toggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        toggleLabel.Text = "Enable Trade Freeze (OFF)"
        status.Text = "Trade Status: Added All Pets With Priority"
        toggleCircle:TweenPosition(UDim2.new(0, 2, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
    end
end

toggle.MouseButton1Click:Connect(function()
    isOn = not isOn
    updateToggle()
    print("Trade Freeze toggled:", isOn)
end)

updateToggle()

-- Offer Pets Button
local offerButton = Instance.new("TextButton")
offerButton.Size = UDim2.new(1, -20, 0, 40)
offerButton.Position = UDim2.new(0, 10, 0, 120)
offerButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
offerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
offerButton.Font = Enum.Font.GothamBold
offerButton.TextSize = 16
offerButton.Text = "Offer Pets (Priority)"
offerButton.Parent = frame
offerButton.AutoButtonColor = false
local offerCorner = Instance.new("UICorner")
offerCorner.CornerRadius = UDim.new(0, 6)
offerCorner.Parent = offerButton

offerButton.MouseEnter:Connect(function()
    offerButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
end)

offerButton.MouseLeave:Connect(function()
    offerButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
end)

offerButton.MouseButton1Click:Connect(function()
    if not isOn then
        notify("You must turn on Trade Freeze")
        return
    end
    status.Text = "Trade Status: Added All Pets With Priority"
    notify("Added All Pets With Priority")
    print("Offer Pets button clicked and processed")
    -- Insert your offer pets logic here
end)

-- Force Accept Button
local acceptButton = Instance.new("TextButton")
acceptButton.Size = UDim2.new(1, -20, 0, 40)
acceptButton.Position = UDim2.new(0, 10, 0, 170)
acceptButton.BackgroundColor3 = Color3.fromRGB(0, 120, 0)
acceptButton.TextColor3 = Color3.fromRGB(255, 255, 255)
acceptButton.Font = Enum.Font.GothamBold
acceptButton.TextSize = 16
acceptButton.Text = "Force Accept"
acceptButton.Parent = frame
acceptButton.AutoButtonColor = false
local acceptCorner = Instance.new("UICorner")
acceptCorner.CornerRadius = UDim.new(0, 6)
acceptCorner.Parent = acceptButton

acceptButton.MouseEnter:Connect(function()
    acceptButton.BackgroundColor3 = Color3.fromRGB(0, 160, 0)
end)

acceptButton.MouseLeave:Connect(function()
    acceptButton.BackgroundColor3 = Color3.fromRGB(0, 120, 0)
end)

acceptButton.MouseButton1Click:Connect(function()
    if not isOn then
        notify("You must turn on Trade Freeze")
        return
    end
    print("Force Accept button clicked and processed")
    notify("Force Accept executed")
    -- Insert your force accept logic here
end)
