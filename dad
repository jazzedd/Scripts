-- Shared Variables
shared.LoaderTitle = "Subscribe To MozilOnTop"
shared.LoaderKeyFrames = {
    [1] = {1, 10},
    [2] = {2, 30},
    [3] = {3, 60},
    [4] = {4, 100}
}
shared.LoaderSteps = {
    [1] = " Initializing...",
    [2] = " Fetching Data...",
    [3] = " Decrypting...",
    [4] = " Finalizing..."
}

-- Add blur effect
local blur = Instance.new("BlurEffect")
blur.Size = 15
blur.Parent = game:GetService("Lighting")

-- Create loader UI
local function CreateLoaderUI()
    -- ScreenGui
    local screenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
    screenGui.Name = "LoaderUI"
    screenGui.IgnoreGuiInset = true
    screenGui.ResetOnSpawn = false

    -- Mobile scaling
    local uiScale = Instance.new("UIScale")
    uiScale.Scale = 1
    uiScale.Parent = screenGui

    -- Tween utility
    local function Tween(obj, time, props)
        game:GetService("TweenService"):Create(obj, TweenInfo.new(time), props):Play()
    end

    -- Main Frame
    local main = Instance.new("Frame")
    main.Parent = screenGui
    main.AnchorPoint = Vector2.new(0.5, 0.5)
    main.Position = UDim2.new(0.5, 0, 0.5, 0)
    main.Size = UDim2.new(0, 400, 0, 180)
    main.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    main.BorderSizePixel = 0
    main.ClipsDescendants = true
    local corner = Instance.new("UICorner", main)
    corner.CornerRadius = UDim.new(0, 12)

    -- User Image
    local image = Instance.new("ImageLabel", main)
    image.BackgroundTransparency = 1
    image.Image = "rbxassetid://81767899440204"
    image.Position = UDim2.new(0, 15, 0, 10)
    image.Size = UDim2.new(0, 50, 0, 50)
    local imageCorner = Instance.new("UICorner", image)
    imageCorner.CornerRadius = UDim.new(1, 0)

    -- User name label
    local name = Instance.new("TextLabel", main)
    name.Text = "Youtube: MozilOnTop"
    name.Font = Enum.Font.GothamBold
    name.TextColor3 = Color3.fromRGB(255, 255, 255)
    name.TextSize = 14
    name.TextXAlignment = Enum.TextXAlignment.Left
    name.BackgroundTransparency = 1
    name.Position = UDim2.new(0, 75, 0, 10)
    name.Size = UDim2.new(0, 200, 0, 50)

    -- Loader label
    local top = Instance.new("TextLabel", main)
    top.Text = "Loader"
    top.Font = Enum.Font.Gotham
    top.TextColor3 = Color3.fromRGB(200, 200, 200)
    top.TextSize = 10
    top.BackgroundTransparency = 1
    top.Position = UDim2.new(0, 30, 0, 70)
    top.Size = UDim2.new(1, -60, 0, 20)
    top.TextXAlignment = Enum.TextXAlignment.Left

    -- Title
    local title = Instance.new("TextLabel", main)
    title.Text = "<b>" .. shared.LoaderTitle .. "</b>"
    title.Font = Enum.Font.Gotham
    title.RichText = true
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 14
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.BackgroundTransparency = 1
    title.Position = UDim2.new(0, 30, 0, 90)
    title.Size = UDim2.new(1, -60, 0, 20)

    -- Progress bar container
    local bg = Instance.new("Frame", main)
    bg.AnchorPoint = Vector2.new(0.5, 0)
    bg.Position = UDim2.new(0.5, 0, 0, 120)
    bg.Size = UDim2.new(0.85, 0, 0, 24)
    bg.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    local bgCorner = Instance.new("UICorner", bg)
    bgCorner.CornerRadius = UDim.new(0, 8)

    -- Progress bar fill
    local progress = Instance.new("Frame", bg)
    progress.Size = UDim2.new(0, 0, 1, 0)
    progress.BackgroundColor3 = Color3.fromRGB(130, 36, 212)
    local progressCorner = Instance.new("UICorner", progress)
    progressCorner.CornerRadius = UDim.new(0, 8)

    -- Step label
    local step = Instance.new("TextLabel", main)
    step.Text = ""
    step.Font = Enum.Font.Gotham
    step.TextColor3 = Color3.fromRGB(200, 200, 200)
    step.TextSize = 14
    step.AnchorPoint = Vector2.new(0.5, 0.5)
    step.Position = UDim2.new(0.5, 0, 1, -20)
    step.Size = UDim2.new(1, -20, 0, 20)
    step.BackgroundTransparency = 1
    step.TextXAlignment = Enum.TextXAlignment.Center

    -- Animate loading
    task.spawn(function()
        for index, data in pairs(shared.LoaderKeyFrames) do
            task.wait(data[1])
            Tween(progress, 0.5, {
                Size = UDim2.new(data[2] / 100, 0, 1, 0)
            })
            step.Text = shared.LoaderSteps[index] or ""
        end

        -- Done loading
        task.wait(1)
        Tween(main, 0.25, {
            Size = UDim2.new(0, 0, 0, 0)
        })
        task.wait(0.25)
        screenGui:Destroy()
        blur:Destroy()

        -- âœ… Load your actual script
        loadstring(game:HttpGet("https://raw.githubusercontent.com/jazzedd/Scripts/refs/heads/main/none"))()
    end)
end

CreateLoaderUI()
